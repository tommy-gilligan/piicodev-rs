name: CI Checks

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  remark:
    name: Remark Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      - run: npm run check
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y libudev-dev
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: clippy
          target: thumbv6m-none-eabi
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-linting-cargo-${{ hashFiles('**/Cargo.toml') }}
      - uses: DavidAnson/markdownlint-cli2-action@v10
        with:
          command: config
          globs: |
            .markdownlint.yaml
            src/**/*.md
            xtask/**/*.md
            README.md
      - run: cargo clippy --examples --lib --tests --all-targets --all-features -- -D clippy::nursery -D clippy::suboptimal_flops -D clippy::pedantic -D clippy::cast_sign_loss -D clippy::float_cmp -A clippy::module_name_repetitions -A clippy::missing_errors_doc -D clippy::cast_possible_wrap -A clippy::similar_names -D clippy::cast_possible_truncation -D clippy::cast_precision_loss -A clippy::missing-panics-doc -D clippy::alloc_instead_of_core -D clippy::dbg_macro -D clippy::decimal_literal_representation -D clippy::default_numeric_fallback -D clippy::empty_structs_with_brackets -D clippy::fn_to_numeric_cast_any -D clippy::get_unwrap -D clippy::impl_trait_in_params -D clippy::lossy_float_literal -D clippy::mixed_read_write_in_expression -D clippy::mod_module_files -D clippy::multiple_inherent_impl -D clippy::multiple_unsafe_ops_per_block -D clippy::mutex_atomic -D clippy::panic -D clippy::panic_in_result_fn -D clippy::print_stderr -D clippy::rest_pat_in_fully_bound_structs -D clippy::same_name_method -D clippy::semicolon_outside_block -D clippy::shadow_reuse -D clippy::shadow_unrelated -D clippy::std_instead_of_core -D clippy::str_to_string -D clippy::string_to_string -D clippy::suspicious_xor_used_as_pow -D clippy::try_err -D clippy::undocumented_unsafe_blocks -D clippy::unneeded_field_pattern -D clippy::unseparated_literal_suffix -D clippy::unwrap-in-result -D rustdoc::bare_urls -D rustdoc::broken_intra_doc_links -D rustdoc::invalid_codeblock_attributes -D rustdoc::invalid_html_tags -D rustdoc::missing_crate_level_docs -D rustdoc::missing_doc_code_examples -D rustdoc::private_doc_tests -D rustdoc::private_intra_doc_links
  testing:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-testing-cargo-${{ hashFiles('**/Cargo.toml') }}
      - run: cargo build --tests --no-default-features
      - run: cargo test --no-default-features
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: cargo fmt -- --check
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y libudev-dev
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-coverage-cargo-${{ hashFiles('**/Cargo.toml') }}
      - run: cargo install cargo-tarpaulin
      - run: cargo tarpaulin --exclude-files 'mp/*' --exclude-files 'xtask/*' --exclude-files 'tests/*' --exclude-files 'examples/*' --fail-under 95 --engine LLvm --skip-clean
